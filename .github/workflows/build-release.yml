name: Build and Release

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*' # Triggers the workflow on version tags, e.g., v1.0, v2.1

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        architecture: [x86, x64]
        configuration: [Debug, Release]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'  # Adjust based on your project's .NET version

      - name: Publish
        run: dotnet publish eye_tracker_app_csharp.csproj --configuration ${{ matrix.configuration }} -p:Platform=${{ matrix.architecture }} --runtime win-${{ matrix.architecture }} --self-contained -o ./publish/${{ matrix.architecture }}/${{ matrix.configuration }}

      - name: Create ZIP package
        run: |
          $outputDir = "./publish/${{ matrix.architecture }}/${{ matrix.configuration }}"
          $zipPath = "${{ matrix.architecture }}-${{ matrix.configuration }}.zip"
          Compress-Archive -Path "$outputDir/*" -DestinationPath "$zipPath"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.architecture }}-${{ matrix.configuration }}
          path: ${{ matrix.architecture }}-${{ matrix.configuration }}.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/') # Only run the release job on tag pushes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts
          asset_name: artifacts
          asset_content_type: application/zip
